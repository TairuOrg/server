generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int             @id @default(autoincrement())
  personal_id        String          @unique(map: "unique_personal_id_constraint") @db.VarChar(10)
  password           String          @db.VarChar(255)
  name               String          @db.VarChar(70)
  phone_number       String          @unique(map: "user_phone_number_unique") @db.VarChar(17)
  email              String          @unique(map: "email_unique_user") @db.VarChar(70)
  residence_location String          @db.VarChar(50)
  is_deleted         Boolean         @default(false)
  administrators     administrators?
  cashier            cashier?
}

model administrators {
  id   Int  @unique(map: "id_admin_unique_constraint")
  User User @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "administrator_id_fk")

  @@index([id], map: "fki_administrator_id_fk")
}

model cashier {
  id        Int     @unique(map: "id_cashier_unique_constraint")
  is_online Boolean @default(false)
  User      User    @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cashier_fk")

  @@index([id], map: "fki_cashier_fk")
}

model customers {
  id                 Int     @id @default(autoincrement())
  name               String  @db.VarChar(70)
  personal_id        String  @unique(map: "unique_personal_id") @db.VarChar(10)
  phone_number       String  @unique(map: "phone_number_unique") @db.VarChar(17)
  residence_location String  @db.VarChar(50)
  is_deleted         Boolean @default(false)
  sales              sales[]
}

model entries {
  id            Int             @id @default(autoincrement())
  admin_id      Int
  description   String
  date          DateTime        @default(dbgenerated("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)")) @db.Timestamp(0)
  entries_items entries_items[]

  @@index([admin_id], map: "fki_admin_id_entries_fk")
}

model entries_items {
  id       Int     @id @default(autoincrement())
  entry_id Int
  item_id  Int
  quantity Int
  entries  entries @relation(fields: [entry_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "entry_id_entries_items_fk")
  items    items   @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_id_entries_items_fk")

  @@index([item_id], map: "fki_e")
  @@index([entry_id], map: "fki_entry_id_entries_items_fk")
}

model items {
  id            Int             @id(map: "articles_pk") @default(autoincrement())
  barcode_id    String?         @unique(map: "barcode_id") @db.VarChar(14)
  name          String          @db.VarChar(70)
  price         Decimal         @db.Decimal(4, 2)
  category      String          @db.VarChar(25)
  manufacturer  String          @db.VarChar(70)
  quantity      Int
  entries_items entries_items[]
  sales_items   sales_items[]
}

model notifications {
  id                 Int                  @id @default(autoincrement())
  body_message       String               @db.VarChar
  priority_status    String               @db.VarChar
  date               DateTime             @default(dbgenerated("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)")) @db.Timestamp(0)
  sent_notifications sent_notifications[]
}

model reports {
  id         Int      @id @default(autoincrement())
  admin_id   Int
  type       String   @db.VarChar(25)
  report_url String   @db.VarChar
  date       DateTime @default(dbgenerated("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)")) @db.Timestamp(0)

  @@index([admin_id], map: "fki_admin_id_reports_fk")
}

model sales {
  id           Int           @id @default(autoincrement())
  cashier_id   Int
  customer_id  Int
  date         DateTime?     @default(dbgenerated("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)")) @db.Timestamp(0)
  is_completed Boolean       @default(true)
  customers    customers     @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_id_sales_fk")
  sales_items  sales_items[]

  @@index([cashier_id], map: "fki_cashier_id_sales_fk")
  @@index([customer_id], map: "fki_customer_id_sales_fk")
}

model sales_items {
  id       Int   @id @default(autoincrement())
  item_id  Int
  sale_id  Int
  quantity Int
  items    items @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "item_id_sales_items_fk")
  sales    sales @relation(fields: [sale_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sale_id_sales_items_fk")

  @@index([item_id], map: "fki_item_id_sales_items_fk")
  @@index([sale_id], map: "fki_sale_id_sales_items_fk")
}

model sent_notifications {
  id              Int           @id @default(autoincrement())
  notification_id Int
  admin_id        Int
  is_read         Boolean
  is_ignored      Boolean
  notifications   notifications @relation(fields: [notification_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "notification_id_sent_notifications_fk")

  @@index([admin_id], map: "fki_admin_id_sent_notifications_fk")
  @@index([notification_id], map: "fki_notification_id_sent_notifications_fk")
}
